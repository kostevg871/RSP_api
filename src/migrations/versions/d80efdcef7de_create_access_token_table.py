"""create access_token table

Revision ID: d80efdcef7de
Revises: 25b384898acd
Create Date: 2024-09-04 21:17:18.805345

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd80efdcef7de'
down_revision: Union[str, None] = '25b384898acd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('access_token_email_key', 'access_token', type_='unique')
    op.drop_column('access_token', 'is_active')
    op.drop_column('access_token', 'is_superuser')
    op.drop_column('access_token', 'username')
    op.drop_column('access_token', 'registered_at')
    op.drop_column('access_token', 'hashed_password')
    op.drop_column('access_token', 'email')
    op.drop_column('access_token', 'id')
    op.drop_column('access_token', 'is_verified')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('access_token', sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('access_token', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.add_column('access_token', sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('access_token', sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('access_token', sa.Column('registered_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('access_token', sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('access_token', sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('access_token', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.create_unique_constraint('access_token_email_key', 'access_token', ['email'])
    # ### end Alembic commands ###
